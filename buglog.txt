Checkpoint 1:

1) 

Bug: The code would continue to bootloop even though gdt was initalized correctly

Fix: Had to comment out the function that would run tests

2)

Bug: RTC and keyboard interrupt handlers only ran once

Fix: Needed to have assembly linkage around handlers to properly call `iret`

3)

Bug: RTC interrupt handler only ran once still

Fix: Didn't fully read RTC documentation, forgot to read from C register in handler

4)

Bug: EOI to a device on slave PIC wasn't working

Fix: Forgot to send EOI to master PIC as well in `send_eoi` function

5)

Bug: Bootlooping on devel

Fix: Missing paranthesis around definition

6)

Bug: Print statements crashed devel/info mem only showing one entry

Fix: Had to enable the page table for video memory

Checkpoint 2:

1)

Bug: Was only able to backspace once

Fix: Forgot to subtract variable keeping track of number of characters in buffer

2)

Bug: Control-L would clear the terminal but also print the letter "l"

Fix: Had to exit keyboard handler after clearing terminal

3)

Bug: Some keys would print incorrect characters on screen

Fix: Our scancodes were slightly off (e.g. pressing z would print x)

4) 

Bug: Page fault when trying to test read_dentry_by_name and index

Fix: When passing in the dentry I was not intalizing it so it was NULL and was getting derfrenced

5) 

Bug: Executables files would only print the last few chars 12345...XYZ and the first half of the file would be overwritten.

Fix: I was printing NULL terminator so I had to make sure im not putc '/0'

6) 

Bug: Read data would not change buffer at all

Fix: My logic was incorrect because I forgot the inode contains block index and thats how we refrence block data